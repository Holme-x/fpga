// =============================================================================
// Generated by efx_ipmgr
// Version: 2024.1.163
// IP Version: 5.11
// =============================================================================

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2024 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//                                                                       
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//                                                                       
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.                                                
//
////////////////////////////////////////////////////////////////////////////////

`define IP_UUID _bc08b398162e498eaa40980c1f3d5cf6
`define IP_NAME_CONCAT(a,b) a``b
`define IP_MODULE_NAME(name) `IP_NAME_CONCAT(name,`IP_UUID)
module DdrCtrl
(
    input clk,
    input core_clk,
    input twd_clk,
    input tdqss_clk,
    input tac_clk,
    input reset_n,
    output reset,
    output cs,
    output ras,
    output cas,
    output we,
    output cke,
    output [15:0] addr,
    output [2:0] ba,
    output odt,
    output [2:0] shift,
    output [4:0] shift_sel,
    output shift_ena,
    input cal_ena,
    output cal_done,
    output cal_pass,
    output [2:0] cal_shift_val,
    output [1:0] o_dm_hi,
    output [1:0] o_dm_lo,
    input [1:0] i_dqs_hi,
    input [1:0] i_dqs_lo,
    input [1:0] i_dqs_n_hi,
    input [1:0] i_dqs_n_lo,
    output [1:0] o_dqs_hi,
    output [1:0] o_dqs_lo,
    output [1:0] o_dqs_n_hi,
    output [1:0] o_dqs_n_lo,
    output [1:0] o_dqs_oe,
    output [1:0] o_dqs_n_oe,
    input [15:0] i_dq_hi,
    input [15:0] i_dq_lo,
    output [15:0] o_dq_hi,
    output [15:0] o_dq_lo,
    output [15:0] o_dq_oe,
    input [7:0] axi_aid,
    input [31:0] axi_aaddr,
    input [7:0] axi_alen,
    input [2:0] axi_asize,
    input [1:0] axi_aburst,
    input [1:0] axi_alock,
    input axi_avalid,
    output axi_aready,
    input axi_atype,
    input [7:0] axi_wid,
    input [127:0] axi_wdata,
    input [15:0] axi_wstrb,
    input axi_wlast,
    input axi_wvalid,
    output axi_wready,
    output [7:0] axi_rid,
    output [127:0] axi_rdata,
    output axi_rlast,
    output axi_rvalid,
    input axi_rready,
    output [1:0] axi_rresp,
    output [7:0] axi_bid,
    output [1:0] axi_bresp,
    output axi_bvalid,
    input axi_bready,
    output [7:0] cal_fail_log
);
`IP_MODULE_NAME(efx_ddr3_soft_controller)u_efx_ddr3_soft_controller
(
    .clk ( clk ),
    .core_clk ( core_clk ),
    .twd_clk ( twd_clk ),
    .tdqss_clk ( tdqss_clk ),
    .tac_clk ( tac_clk ),
    .reset_n ( reset_n ),
    .reset ( reset ),
    .cs ( cs ),
    .ras ( ras ),
    .cas ( cas ),
    .we ( we ),
    .cke ( cke ),
    .addr ( addr ),
    .ba ( ba ),
    .odt ( odt ),
    .shift ( shift ),
    .shift_sel ( shift_sel ),
    .shift_ena ( shift_ena ),
    .cal_ena ( cal_ena ),
    .cal_done ( cal_done ),
    .cal_pass ( cal_pass ),
    .cal_shift_val ( cal_shift_val ),
    .o_dm_hi ( o_dm_hi ),
    .o_dm_lo ( o_dm_lo ),
    .i_dqs_hi ( i_dqs_hi ),
    .i_dqs_lo ( i_dqs_lo ),
    .i_dqs_n_hi ( i_dqs_n_hi ),
    .i_dqs_n_lo ( i_dqs_n_lo ),
    .o_dqs_hi ( o_dqs_hi ),
    .o_dqs_lo ( o_dqs_lo ),
    .o_dqs_n_hi ( o_dqs_n_hi ),
    .o_dqs_n_lo ( o_dqs_n_lo ),
    .o_dqs_oe ( o_dqs_oe ),
    .o_dqs_n_oe ( o_dqs_n_oe ),
    .i_dq_hi ( i_dq_hi ),
    .i_dq_lo ( i_dq_lo ),
    .o_dq_hi ( o_dq_hi ),
    .o_dq_lo ( o_dq_lo ),
    .o_dq_oe ( o_dq_oe ),
    .axi_aid ( axi_aid ),
    .axi_aaddr ( axi_aaddr ),
    .axi_alen ( axi_alen ),
    .axi_asize ( axi_asize ),
    .axi_aburst ( axi_aburst ),
    .axi_alock ( axi_alock ),
    .axi_avalid ( axi_avalid ),
    .axi_aready ( axi_aready ),
    .axi_atype ( axi_atype ),
    .axi_wid ( axi_wid ),
    .axi_wdata ( axi_wdata ),
    .axi_wstrb ( axi_wstrb ),
    .axi_wlast ( axi_wlast ),
    .axi_wvalid ( axi_wvalid ),
    .axi_wready ( axi_wready ),
    .axi_rid ( axi_rid ),
    .axi_rdata ( axi_rdata ),
    .axi_rlast ( axi_rlast ),
    .axi_rvalid ( axi_rvalid ),
    .axi_rready ( axi_rready ),
    .axi_rresp ( axi_rresp ),
    .axi_bid ( axi_bid ),
    .axi_bresp ( axi_bresp ),
    .axi_bvalid ( axi_bvalid ),
    .axi_bready ( axi_bready ),
    .cal_fail_log ( cal_fail_log )
);
endmodule

//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
UsL7L2Ch3xAUn6InYNjzj3xOUUc53gVPNKHMrxP1kIv5l/IP+No0ijf0lMwvYi0a
dqdOTCJaGi0qdlZqmeQta+ZBdxtnWAP9jXcvpBO7HncTlnIou3ro0oPUavfsxhA3
aVsdluzJ2dd5WCt47+ORe4SSFDILfV6H2weRXpjd3qCFCZR0v9TLIE3yBdnlyqXn
AGfxT17aqj7oBhazLd3FYuOKHzaHJiAFmqkRE03wn62zpbmCXgyohoRgdhnq05mY
MPiHg/tHXb3QIH287A5Auqm18ppW0ZmHLQswCeKKTErtZ0VUql1cnYN4mPNUTPJY
U8wcikuo6Cm2degKGGxKwA==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 672 )
`pragma protect data_block
rxVjsL8+co4MtsXpHQ4zGwmQlum4RkhbiqhYxwXG4Not96HfEmNwvFI1BjcTy3K5
mvwNmn3kVK8t3I+myD6AU+LEoFmWwbuek6pMhqSE8tmD9CkHeUtVUs+jhLuHzCN7
DXerqL841qsWcOYE7roXufKI6VhSfjT4zyEPgT9qiLq9wf2aS6gI/KmrjgA2/QlX
BFxhpfduT757uK1W9fFWQLMhSFqVjxiOV+Sx0XmryHqdUdOJRgbk+SGNepnff9CH
HsW1XYdl2Zy9Hb33tHjWZ8tXpCgc9D88JDCOq/AxZ0VMlPuUWCJJ5SYlLGJKx6jf
Ji83DOfP3t4DjXCpBxLPc4qVUAwZQpu43cYuUVlyPcjpkcf9E/LzX3xLpB21pXRm
/kR50cTgboOs/lE5JAS9D0jvRQFDkwnf/MeKyi8YDUfYmsneMr4hDBei2aSM1Mir
zya2LWfgG+uAL0dIqs1m1hf2kMNIKC9ULxmSb1NkPmBAlDDOp8yfY+QIejAzeMAV
tjgvEOYf59p9WlDAKA5mqJIQHvkjIQAiV71PypeWW+2pagzo7m/T3pgAjkFT9JOV
UpTYKUc8/CORvSMROc6nuGGT0iFoBWeXtfmb15zDgiExQdiDD4PhtRfrR8W12O7c
+v4VtYoMwwBRUJrh0pi4sQqSV/686y08hAFMK6wYQwYZ4aNU0Qxp3e0Tal+VZrQA
R0Jt9kQbV2lCo3gyvnIBiCpvlPsRLFvoYd7wyUGIi7cQdSoWZHXDIc34nqF9MTQX
9NNIrfMUHrdZUtiJsGtvJmrk10E6hLUmWX3USyCz0sgdrpdgNTlrQFU0GoEbw+Ty
LZxAymHo9mzqqd1u4RG5UdTJO0iWejy+DHC60rry9RioRBH48QJO6cfkJDordTG+
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
DIo78X2LI5mic1eUzAEiPNUKS2roCTZ9GpmuhSzMzc9sCyl2NqDZSNnqpSjdS9Py
inpHmCgWFKbiyZdFdjOzzMOKFu9oB+fOj5dvz5cd30etU60UbXAb/Ks4x3s4oojd
w2DwEk+AU/0bqxmAHmOsrxGNymjA51v/ZTzvxRQP3pFGv3+M9RAprctEQuTmFzk1
BDRxTbqqYXXRWWVjpWSDcw8/dAed3HOjFt4hGh0ERArxmYi6+7TRVnEYMTmZkIet
eiBvjupiCqKWzCPhEEN90DzVwgfw8VAgzjT3WcrYigkSopphM/PvYaDkJBDyYwNp
j/0bzzp+MnE3REBOKmJ/xQ==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 672 )
`pragma protect data_block
LTErGJwwDzxwS3lV4Z9BceUmwjdcfXv7Fq8PC5K2NXk4lLqt0ZiiAwLukQ0/lBKX
/KmjeOes23N2w5PuiOKA97JlikAUnjb8A2orHQeqtXY92+hMT+EhMDwsBt2m0qtv
urdTpBNc36oRivF55Ms6Kja8g9WB8+qN/h/TBkYTyjGzspyPx0GRpR8VlZUZryEZ
SnQZYhNNNjH9/0MqpunmalRUlGvh1z7Z59KCTsJXfKJA9d+DJaALsG6Qnu2UhlA0
p5ObCbIRDuihIBBq99karJyrVbCbRK89Wvim+qqX7GhY3dcekqbyxZ3i3Ei6/0Oj
1vwccxfs08gt5kuLGZY0iwMoUVpfwjeAZ7/K9dSX4skvQVgzzIYi24pzPEOVHTMW
33tFMFEXwWpt0Y8OyGM/JA4B7YTxS2jAgOTPd4rJkQ0mbEFPZN1UVLv3WPsRVpuc
r7hhC/ogyj0RAJ3LqXYNSGgvujkPu0rURHzGZUyvEto8xgRG6Z3P1XYh6k+LDdI9
jvtuykI2fBayPk1WU4BUJhFOz86NXPutgNx/Mj+eyVxOVMVgNjwiFGjiOgn1mZja
NXMHljR+4+K3Ipi2ZpgJLkqbb0+56TTxsVAkJjUJF7dbROOFWKrd7qF4UnAiwrJW
PUfiubUETFLHivxOuM0JDZmNnKvNfOyj8sb0JxblYZO3b3m4j3XEJgucMz5r2WPE
ekzwYUuILwqbVvOZYkfCgYFqDKGGHm8LXRhYa+VaWrL7C1Id/ij3ChI8PbVKqY5n
I4FzXIdcLGWqPDAIsR6jKOaNg7ZiwxY/g3tX9/I93AmwbBRuWDJ2UTQ+BWg76jq+
WXDg1jXKIxrrUfyE9yRjT06F0feooeqOwlsfKFbdw2QxgGVX0G0vKDAqg6exjFd7
`pragma protect end_protected

//pragma protect end


`include "ddr3_controller.vh"
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
bQbsNeJ3z9oMqD72edjfadrbj1PaoQW997NJSVxAe+Ru8ueMzILNH2H7IH8GDC1S
w/pw/SoSV07ah5Zf/F/IZ+N3kCG22P5VTXXwehetPWfknHpwXVHpblO02Yg5HLos
vt1NHimddfMlYDcUBofQswyZ/vy8knfcYHZ13Fsxp3AxTaHc2OakAyzWkpuCOydb
X56LzDxvHExVPbi0/S07Ejtwr9xgCIbNikfjuITC//MYS5Gpus0WSCcTtKcHOaYg
zDWvjclSwAvfKXfYH/iWkS+0izpR69YECxABe6FvzrM4aouHgRpQX9N0UjXa+4F1
wC0j0IoZ+RcHCIPegS33OA==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 14448 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


`include "ddr3_controller.vh"
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
lWH7qh3FfSIqD15RVdbVjr/8dEW1yJRHDUtzWRwDcV86VlBAUx6GURV70fj1i0AX
wDmkCFR6rYAn0bdL3h8MCMNQ7iuaWLiD7SUfg3F2vilIuJIcx2A6vZVAgJtbfYaV
Y3J/5W72UeXQD5LggwJdYmnp41Dy9oKE5Agq2XkTRyqc8Fg+KeMJc9YN6x6jfbAn
38VRcifWjnCecMkwVx40g+PQBaibR4CS8gWg2vNBTmfj3deagRjE79TYWXS7xmUX
8H7koVrpkfhA3rqPD9D0t0F6gAX4xrgM5BGRGpd3JbjhWACi43ndMyNpFcJfsZqH
AfLF/4s/i8E8IzOwuoP0uw==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 40432 )
`pragma protect data_block
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
74i/goMpqqCoh/sBnSos7CdxjSNod6d/eP9GTaJysx8ptxA5fUc3t2AKCMF9+8OC
GnQzkeiRsFHb0kuNG8diFfaOP7ox3UsH5T8rcZ2M+MQlnBdmZWo2UKmPWKdlAmM0
jOuacD0tfQVD6w6smOfHFnbOWz+GgvT/fRDP6O+7QPTywFUlWMmtFOk9MOHDlzwu
v7ehRkZu6I5cdb4xY8fkZ/HT04cetn/oHBFWoaGpITwFAiBgryCCETehFAQQV5gO
SOhSaUP4h8IuX2ZmN9RCkEN0JXP7l+SCqifyQYjnOlkLmBam+tOgnkJGgYVxS/CF
kyF8UEI6aR+hsupMTtHS5YlD94yBFz4SL86aK0E0nLqiIwciEwrWi8beW9bUE8YJ
9OhFRma7rdoXDNaaFU6ivYhI6eVk/MXkTdh59dPNXstounriOk6pSuIObNO5+glz
XZZtcyVZmGOyQzJ6DYs4HSvFWPSuT2AytVr6EwkmiYL0NfyFU6cUXlWUGqQ3M6dw
dtmPjrQRZeWf1TiLBl+UcMS7lDNW/bZdhWTKkaHitM1OMnbVNR1Y8jVrnUcWqWWM
4Hxb9ZNpYsMz6Acz+aMdNly2W1qu/+6fKKfy0qRpH5/c7MIrqYgCYJX8xi8pr8u9
AJ1JLpz9Wl1mnN9LZNZ9mJULnHJKtXBDtZr+F3E/1z5LSi0Nd729NXgs3O2aDKC0
C9cZZv9Ltw6KBSCqHhkelBkeNQ3Sbu5GG/WIwU/a3F6VO7yjqkrO5srM17cmOy+7
mQQry6ODt62Oa2B9DRQqSqsmef8zeQnOwGbZNgt8McIqQtm18ir2eRHcusk1oy+P
RzN1bTlzJqw8LX+JXnzd2tFMHO2vQ9mibYGp/qsnGEmaCNgkUXdmmTMXmppMuyRO
ooS3kyP30VjOy06yqDRPulnDtJCPjmkJVNks07bCKXamd8lyRmvuvEd2pWSoWH2z
5xVuMMBilppyz0AGAuyivRLTwat7VHMQTd8h7xDHPUm1hmMwpumhRPSUT5OfMGAI
i0tTGsGjtJOcwX15NruAZI3X0JIzB3MIC54A/1qSP8veC0WPUKoSoaG/iFdzVmJl
mjRhs3dSdE7Y1yUH7wyPfS26KM9hLK0Ov3sVq+OqOP0BBuOTMisTGyBFxFhM3CR/
BcSbFZREMVsOvJBDe1QzVlMNNmtiv9wmYSSpXGkDHfPA3G9UYNGf+IwtDERWVZEZ
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
j99w1dRESBNIBnREMk0ukw==
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
VPlOvdsY8c2ldsO1IVdenQQ3K3WiO1DB3MI+0ryQz36gktvY2fCEPMVLH7xMBQa5
HSZAzz7GBeBwgJTFoiQ448VnQEj5taLdunoEsf2IS4yXtNQs3yb3XkWterFY5SCI
J9f68pTgR/8ADMBs3Lx4IXe67JDdnSL21nQ33YlMfrSdXquc30P2UXnejSyxFgCW
5FPhRIr/JxgYQUrSwPndAVQFIUDluEDmQNmJUjWmiMPC4gv8gy+UYF0GxeSwql74
8aeQ6lFwHMT3DtRA2wAF/HtlU063PqI1N48CWeKBwo0PeWhfK9HFTNEVmJUhARht
7Qr+MjEJ1P9y+fCuryW7vA==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 5424 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


`include "ddr3_controller.vh"
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
MgVJCMklzRuslnypPnvJOSe77tBnpKzU66t1NoDKAYEKxqeYXDjuLo9BWf/TBkEq
VnI4nP/ZtpoMLosUM7th37WlhgBfYrkhX69YIXi+yIO2prJhyd3HJ1HjU+KTY0jc
Z5bRkElpVXm6djdnUIUqabU+vfQ7mpqEzIHLssClY1c/2RQGrIIeYsx7M2G2PvYW
S9ItFr1h2Y4ogorXUjK78bxpSbC+Qkkfe1aDGLe+TCIeL8lUxQ8a+rgHFOp5eULh
PywDbV1Bf6Vk2ELoKCtthut2+gbYnV5fhyW3N+3znT6Wr9djpYvjvI3VBvLtZ50a
IGEEeh3Gp2RKbh9x4vydtg==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 1776 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
fjYNvl5fJaEfsbhY+iBPVqYL/Tj5BSBVkN21Lmk6fc29k4+6vK6jB0YDBlxd4ejF
VrFuUmcMHeARfO2SREygQfKzkVRKtiZdOdsOuWfpB3KEFd9F7RVCn+VydW8hrRc1
rMLb8TAib+ygy5mUVmtsGU6Y3O7VNWf8dfAI9Oqz3XecnzijfWdg6g7AaI+gyuc7
dUfQ4Y12GNodU/eLOR7veT8GL++5QuHkZUln+NTue9s+XuA8H6fAlolfzPbecVbk
lwB2l2bsUBRmLEhFpf5pU4OcKAfWBeQrAIqJHqSXr/DTvM/H3HXMirxBE3GoRoJJ
aj4UGxWxnUV64sAOMs3pzQ==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 1760 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
BWQtKsjtfE/KduDkRmAwxk96fGU+2OGcVHGSytoodygyJJ9IAiVHxcvXBEd1kJvi
WgCUMn9Mt8k/KphXnZ4HxZByagWsW9vWYRHRKdI4M2q4kMiMJso39BIldykInxGy
KKfLlRbc6fqGzWtT9x6AggIXG9lnn9zsI/QSYsiAc5b2p6ZAwUsWZ9epOjTjj1pz
tshB28WporDt4M7H0HxkBIsN8jNb5R3VmpxAFUdeypK95vSomaQeEmaRLqGiQjIF
J7pIGGPJRwfZJ8UNvnoQMMhdGxDAJh73mQy+SucuuNvkjrqJsD70yh4UcXstV08F
xAOAZFok1+bBeifYrm6AtQ==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 1600 )
`pragma protect data_block
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
ZuGU+HNFL2aiEM2yT7wGXQ==
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
S37yKKMS/2sTkojghpn8DFpaDzbE/oAb4Do0XPcVLXI+YSVROHtYa0toqW4/oGhZ
itcnHstyhQCDkbjcPUPHszDx7tjdLG1OtZH5LKAbCJVEXSKLbpbdPKWAMSoAHWRp
MCiDG/okG8OpbUrVz/nBInPbcS7W2MeOTHlKHEGFyYWQJiT3kmXImIJdYM1LSVQp
zFUTAaL0UX5VFw3oz5RXXwGY9gtei+0MNJdY08JlWvrYkJWVxHedgzVb8bQn3mGr
VeZlleEfDi/N5ctnl0BjgPBpECi8FF99fE62yfO7iZ8MUMDjglevmPjnbXLQiszG
XlHBE/aW+RH3u2CaIF7/Wg==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 1952 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


`include "ddr3_controller.vh"
module `IP_MODULE_NAME(efx_ddr3_soft_controller)
(
clk,
core_clk,
twd_clk,
tdqss_clk,
tac_clk,
reset_n,
reset,
cs,
ras,
cas,
we,
cke,
addr,
ba,
odt,
o_dm_hi,
o_dm_lo,
i_dqs_hi,
i_dqs_lo,
i_dqs_n_hi,
i_dqs_n_lo,
o_dqs_hi,
o_dqs_lo,
o_dqs_n_hi,
o_dqs_n_lo,
o_dqs_oe,
o_dqs_n_oe,
i_dq_hi,
i_dq_lo,
o_dq_hi,
o_dq_lo,
o_dq_oe,
wr_busy,
wr_data,
wr_datamask,
wr_addr,
wr_en,
wr_addr_en,
wr_ack,
rd_busy,
rd_addr,
rd_addr_en,
rd_en,
rd_data,
rd_valid,
rd_ack,
shift,
shift_sel,
shift_ena,
cal_ena,
cal_done,
cal_pass,
cal_fail_log,
cal_shift_val,
read_back_en_pipe,
axi_aid,
axi_aaddr,
axi_alen,
axi_asize,
axi_aburst,
axi_alock,
axi_avalid,
axi_aready,
axi_atype,
axi_wid,
axi_wdata,
axi_wstrb,
axi_wlast,
axi_wvalid,
axi_wready,
axi_rid,
axi_rdata,
axi_rlast,
axi_rvalid,
axi_rready,
axi_rresp,
axi_bid,
axi_bvalid,
axi_bresp,
axi_bready
);
input clk;
input core_clk;
input twd_clk;
input tdqss_clk;
input tac_clk;
input reset_n;
output reset;
output cs;
output ras;
output cas;
output we;
output cke;
output [15:0]addr;
output [2:0]ba;
output odt;
output [`DRAM_GROUP-1'b1:0] o_dm_hi;
output [`DRAM_GROUP-1'b1:0] o_dm_lo;
input [`DRAM_GROUP-1'b1:0]i_dqs_hi;
input [`DRAM_GROUP-1'b1:0]i_dqs_lo;
input [`DRAM_GROUP-1'b1:0]i_dqs_n_hi;
input [`DRAM_GROUP-1'b1:0]i_dqs_n_lo;
output [`DRAM_GROUP-1'b1:0]o_dqs_hi;
output [`DRAM_GROUP-1'b1:0]o_dqs_lo;
output [`DRAM_GROUP-1'b1:0]o_dqs_n_hi;
output [`DRAM_GROUP-1'b1:0]o_dqs_n_lo;
output [`DRAM_GROUP-1'b1:0]o_dqs_oe;
output [`DRAM_GROUP-1'b1:0]o_dqs_n_oe;
input [`DRAM_WIDTH-1'b1:0] i_dq_hi;
input [`DRAM_WIDTH-1'b1:0] i_dq_lo;
output [`DRAM_WIDTH-1'b1:0] o_dq_hi;
output [`DRAM_WIDTH-1'b1:0] o_dq_lo;
output [`DRAM_WIDTH-1'b1:0] o_dq_oe;
output 						wr_busy;
input [`WFIFO_WIDTH-1'b1:0]	wr_data;
input [`DM_BIT_WIDTH-1'b1:0] wr_datamask;
input [31:0]				wr_addr;
input 						wr_en;
input						wr_addr_en;
output 						wr_ack;
output 						rd_busy;
input  [31:0] 				rd_addr;
input  				    rd_addr_en;
input  				    rd_en;
output [`WFIFO_WIDTH-1'b1:0]	rd_data;
output 						rd_valid;
output 						rd_ack;
output [2:0]shift;
output [4:0]shift_sel;
output shift_ena;
input cal_ena;
output cal_done;
output cal_pass;
output [7:0]cal_fail_log;
output [2:0]cal_shift_val;
output [3:0]read_back_en_pipe;
input wire [7:0]    axi_aid;
input wire [31:0]   axi_aaddr;
input wire [7:0]    axi_alen;
input wire [2:0]    axi_asize;
input wire [1:0]    axi_aburst;
input wire [1:0]    axi_alock;
input wire          axi_avalid;
output wire          axi_aready;
input wire          axi_atype;
input wire [7:0]    axi_wid;
input wire [`WFIFO_WIDTH-1:0]  axi_wdata;
input wire [`DM_BIT_WIDTH-1'b1:0]   axi_wstrb;
input wire          axi_wlast;
input wire          axi_wvalid;
output wire          axi_wready;
output wire [7:0]    axi_rid;
output wire [`WFIFO_WIDTH-1:0]  axi_rdata;
output wire          axi_rlast;
output wire          axi_rvalid;
input wire          axi_rready;
output wire [1:0]    axi_rresp;
output wire [7:0]    axi_bid;
output wire          axi_bvalid;
output wire [1:0]    axi_bresp;
input wire          axi_bready;
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
FBrjFMDx0wKNhrwMP3R7kYFP1peaFHGohPfNFfjJ+mWHwQXrzdgrOZDwXUo1yrhg
Y+30nMAgHK+99iMmZrSINOEXTqxvQhzsY6cu9hyFeqgQh3rz2WnvcuBEeOVHHGKD
sm7Q2XQP45szqGlt/rQtbuHVy6e+KM160q+mtxGeOB656Aka097aE3xdte7yNS+L
lENHjd1jhSrgUievh4FGvW8rSJ0LHu1/AkhL6hs/I/iPTj7sZ+etzt7zsC4dmyqs
GsW7fvse8NJ3nkLzGZXZ9owp7Qng/vnt9utttwF0OmfYJEQ+Tot7AXtFo9Y3vtHq
meDj6Kf8dUz54SyCwHsLFw==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 3344 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
Y5uape65s7YKG/ZXvdcOoS1v1NOPRffuk7ZnmL80zKlVsZQj3G51uDX3yZ57YwPP
YwoAXEbTUxPJc3ZecMuDi4E50ShzHm6OV5gJjKiVLUPij1SoUzfnj9WPwtBoTfFX
u/MO8dTgL+Spy/5JACGKgkmP0ugc/L4zsOOZd7TwcIgOUX5vKg2VNQCC1FHO6RDT
Ua0nJImFAPcZrOIpBblbILE/B0QhlfpNZUfpSCqrNRcN8ZmYWIInWxMHb1JAK8BL
ePbvd8HTh/quW1sTjuI2bInbrncJJo/fB3T5W0rBtG+g5NxBqAq4ayKDbCF0uF8f
e443iDSyE5zx7OOoWWX2xw==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 992 )
`pragma protect data_block
F4mgMZHjiXtD8L52xj0ckihs3J8fhQmYTFi2Yegt3cS6Qk/XFAjfQmVL4oJb/Xin
96bAJxcdW3kkGx8w6QGkij70otxCAp31beLKHV3sCdIe6dNymibEHZUiIEOocrfn
NfLW4kG/oAlvzy6kibkhL/c4U1Udem8E4yqmm1pWQPpVb40t7cFfFfRfIeougPEP
XfjnhJgBCWSc6PBsbUNLKv/O3hEcIs9eZUENAiXkVvw5XKZzIl33t0Cz3kWZNC84
0+Q2towUfiaf13aqKQFyUuzandDPr53GMhggt1vuGbUFZkO9vcrShnf9apX5YI2T
0a4qsC51uOjFg3AMMEFVg8HIAxYArZFOPpGPiC+XqIAOoPxBE8GJq435LneD0h0R
CJwycluvslg3e+VwvhDF4/s3DaPG1uhwxcve/RVGqsb/KVQlFYJbTAL8j2E+eHaF
uqC0hNFeHAQQlAwlg99iqI9mRgzTSdKvkPpoZVdQhmb9a2OBfY5vOIwe6XVTH+0b
Q0coiqJ2CkZAgKygAeUFjkUVhbkX/ody5JN9ujI/5/PQuZsycciO0ZSC7SKax3hJ
oTtqpMMvJkV9vZ0RfYGTcHVR48H7RbZzux/aRfcLqHlIH5Wjg78cas05uqgWD2Cv
hlsyMH8E6BB2wrh3X0fNR8JAzYiYlxmhauEijz9ynOX0SBP7dEjWfdgBJJyruw19
s1kMOkk3JkXBKcuRZ0svR0pOLrzxie2NLr6n7l0Tf1RPK04hWTlfH5lZ7D+9B6WF
9+99TVGBZXeYIIA3Jk5hIAYnv1UJWih4nh/1KMu8TdvFDZRXGQ3Dx5V9U2FzFX6U
E/SMVlScHpvI0FZL7VqUxKJRwYzFHkEzOq05/k7rRNYAyO0YPcm4PUPbx7nRx1yW
DTchATTYiC2jBR/rmXEVWFvgfMHgMhmedNi53EdpC0fSMwUjJERFx0ca0Du883YX
5mMaTjI0Gsb2sNHne7PzRqLhyUtoeO2SO6TNBIWFyskJQpziZVzq51gHRdvX1bsY
OwvFgKypspPApMPF05xv6ZeUhMix6O8h+FU1fZenuHLkgjJxojh94HwMcmCSUmwI
z69aFrXE8z9G8WEQCDD49IPJF+v0Vnb8s1BEmFlkyeZRNkm90n+vv82cVokye0Ig
TA5Lt3b1qHViGxmQ575MpibljkFzQ7rH1DZSAqubg117X/I5WlARc6oZVGBESXCS
uBsXDoMuE2GHkf1j3mTP2gWjZ1yBbmT3ynCGrcIJH1QsO4lYQsI/OIlaFvhW8sIk
UjmpJMJKpJgIs7jOzekZrqigpmiVkL022J9NPdaH8Sk=
`pragma protect end_protected

//pragma protect end


`include "ddr3_controller.vh"
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
ZuGcsbax28dvgnmiWV3ndKxOeomXbcxkF5+hcRPIoEb64k7yrLcF7bLK4RYQSEIr
r63jNfyf/Tm9LBaz3xNOiD4nFAgspi8aJySdqd4ZW+I2ZDZOhpLEGDMdv+FBQee+
J6wpMn15FsL09t2jWTy1Yh62UEBHz+5U0b0gpcUrTmuHds0Ia1RoJakRwflxSQqi
SqqG+Lkj5agt6ZXrOqxd1l2p8d4r+vI+hw5l0tKxw36wvaWT0UKAVhYNUYqAbRRm
SkkOltXJRJr6bHRpruwuLQd1qAUlVZfnTg0Xn8S5GZ79dYx/zYZiBNVsE/YV34BN
GWICPl6KD3bD8KHjDBWZNw==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 14832 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
KM9Pgbr07daMxpOfPF1uRkSe+Ml8J8OE/JttHASdus8Zo4pfivMmKJQGrOhW/vLy
AQZUb5KyynHxC91400N5qNdRXts8sjLxWE/Yw/KHYUXwn+KgtQKJTlW6wn9mJGFr
ck0lJyEbB0LSf8zWunXN3OaOnuvKSK5QIijfjrwJAMHeydXbQstRupb37av47ekD
/RZRCEEw2DZ+u9UuOlGJW0MmZiZOCnjwAFVbTQUq8YhSoLfGj2jE8zd90u1H7GEB
vllU40/dNrXinOwAjTOdJWd7Pp9/GJJlR/CPan8bvh2xQuhuFE0uUFcWZbRZmnXS
UeGgXQT2/f3elNoF5Pk1lw==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 4256 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


`include "ddr3_controller.vh"
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
iF0kpXIkRgbqrj8Jx7+bhztjd1Js9RrlYRUpcy6mR3OO9DiUGp8Bhls/6V/jmrnR
W7WQ/BZhHSNVekkqunCv8WXfD7CN8jyDZzwVcMWUakR9nNRbnnSpsOpLLqlys2xO
VYtJ1jn32UtaBv/6sWizfdbVB0d6onuSdUXQGPq/3I7P43DBzflh4l4E9M95Id9m
oMzpa6lEkuMAe2HeWYtvLa5SLymywBcbyvbEpVXPwdnVdg3g/GmnEvPW4rRcp6MC
QK8ldYMg4guvfFzgY0T1RhM1HCqUVbSb8d7J6rInxDA0ZrV2I/I/i5a8R2IuPhju
mbYCSb9AqUC9gtl7dIylQQ==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 30496 )
`pragma protect data_block
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
0YajRz9duLHmsfji3BwqQQ==
`pragma protect end_protected

//pragma protect end


/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2021 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   simple_dual_port_ram_fifo.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      EFX FIFO
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
//
// *******************************

module `IP_MODULE_NAME(efx_fifo_top) # (
    parameter FAMILY             = "TRION",       // New Param
    parameter SYNC_CLK           = 0,
    parameter BYPASS_RESET_SYNC  = 0,             // New Param
    parameter SYNC_STAGE         = 2,             // New Param
    parameter MODE               = "STANDARD",
    parameter DEPTH              = 512,           // Reverted (Equivalent to WDATA_DEPTH) 
    parameter DATA_WIDTH         = 32,            // Reverted (Equivalent to WDATA_WIDTH)
    parameter PIPELINE_REG       = 1,             // Reverted (By default is ON)
    parameter OPTIONAL_FLAGS     = 1,             // Reverted
    parameter OUTPUT_REG         = 0,
    parameter PROGRAMMABLE_FULL  = "STATIC_DUAL", // Set to "NONE" if not require this feature
    parameter PROG_FULL_ASSERT   = 27,
    parameter PROG_FULL_NEGATE   = 23,
    parameter PROGRAMMABLE_EMPTY = "STATIC_DUAL", // Set to "NONE" if not require this feature
    parameter PROG_EMPTY_ASSERT  = 5,
    parameter PROG_EMPTY_NEGATE  = 7,
    parameter ALMOST_FLAG        = OPTIONAL_FLAGS,
    parameter HANDSHAKE_FLAG     = OPTIONAL_FLAGS,
    parameter ASYM_WIDTH_RATIO   = 4,
    parameter WADDR_WIDTH        = depth2width(DEPTH),
    parameter RDATA_WIDTH        = rdwidthcompute(ASYM_WIDTH_RATIO,DATA_WIDTH),
    parameter RD_DEPTH           = rddepthcompute(DEPTH,DATA_WIDTH,RDATA_WIDTH),
    parameter RADDR_WIDTH        = depth2width(RD_DEPTH),
    parameter ENDIANESS		      = 0,
    parameter OVERFLOW_PROTECT   = 1,
    parameter UNDERFLOW_PROTECT  = 1,
    parameter RAM_STYLE          = "block_ram"

)(
    input  wire                   a_rst_i,
    input  wire                   a_wr_rst_i,
    input  wire                   a_rd_rst_i,
    input  wire                   clk_i,
    input  wire                   wr_clk_i,
    input  wire                   rd_clk_i,
    input  wire                   wr_en_i,
    input  wire                   rd_en_i,
    input  wire [DATA_WIDTH-1:0]  wdata,
    output wire                   almost_full_o,
    output wire                   prog_full_o,
    output wire                   full_o,
    output wire                   overflow_o,
    output wire                   wr_ack_o,
    output wire [WADDR_WIDTH :0]  datacount_o,
    output wire [WADDR_WIDTH :0]  wr_datacount_o,
    output wire                   empty_o,
    output wire                   almost_empty_o,
    output wire                   prog_empty_o,
    output wire                   underflow_o,
    output wire                   rd_valid_o,
    output wire [RDATA_WIDTH-1:0] rdata,
    output wire [RADDR_WIDTH :0]  rd_datacount_o,
    output wire                   rst_busy
); 

localparam WR_DEPTH      = DEPTH;
localparam WDATA_WIDTH   = DATA_WIDTH;
localparam RAM_MUX_RATIO = (RDATA_WIDTH <= WDATA_WIDTH/32) ? 32 :
                           (RDATA_WIDTH <= WDATA_WIDTH/16) ? 16 :
                           (RDATA_WIDTH <= WDATA_WIDTH/8)  ? 8  :
                           (RDATA_WIDTH <= WDATA_WIDTH/4)  ? 4  :
                           (RDATA_WIDTH <= WDATA_WIDTH/2)  ? 2  :
                           (RDATA_WIDTH <= WDATA_WIDTH)    ? 1  :
                           (RDATA_WIDTH <= WDATA_WIDTH*2)  ? 2  :
                           (RDATA_WIDTH <= WDATA_WIDTH*4)  ? 4  :
                           (RDATA_WIDTH <= WDATA_WIDTH*8)  ? 8  :
                           (RDATA_WIDTH <= WDATA_WIDTH*16) ? 16 : 32;           

wire                   wr_rst_int;
wire                   rd_rst_int;
wire                   wr_en_int;
wire                   rd_en_int;
wire [WADDR_WIDTH-1:0] waddr;
wire [RADDR_WIDTH-1:0] raddr;
wire                   wr_clk_int;
wire                   rd_clk_int;
wire [WADDR_WIDTH :0]  wr_datacount_int;
wire [RADDR_WIDTH :0]  rd_datacount_int;

generate
    if (ASYM_WIDTH_RATIO == 4) begin
        if (SYNC_CLK) begin
            assign wr_clk_int     = clk_i;    
            assign rd_clk_int     = clk_i;
            assign datacount_o    = rd_datacount_int;
            assign wr_datacount_o = {WADDR_WIDTH{1'b0}};
            assign rd_datacount_o = {RADDR_WIDTH{1'b0}};
        end
        else begin
            assign wr_clk_int     = wr_clk_i;    
            assign rd_clk_int     = rd_clk_i;
            assign datacount_o    = {(WADDR_WIDTH+1){1'b0}};
            assign wr_datacount_o = wr_datacount_int;
            assign rd_datacount_o = rd_datacount_int;
        end
    end
    else begin
        assign datacount_o    = {(WADDR_WIDTH+1){1'b0}};
        assign wr_datacount_o = wr_datacount_int;
        assign rd_datacount_o = rd_datacount_int;
        if (SYNC_CLK) begin
            assign wr_clk_int     = clk_i;    
            assign rd_clk_int     = clk_i;
        end
        else begin
            assign wr_clk_int     = wr_clk_i;    
            assign rd_clk_int     = rd_clk_i;
        end
    end    

    if (!SYNC_CLK) begin
        //(* async_reg = "true" *) reg [1:0] wr_rst;
        //(* async_reg = "true" *) reg [1:0] rd_rst;
        //
        //always @ (posedge wr_clk_int or posedge a_rst_i) begin
        //    if (a_rst_i) 
        //        wr_rst <= 2'b11;
        //    else 
        //        wr_rst <= {wr_rst[0],1'b0};            
        //end
        //
        //always @ (posedge rd_clk_int or posedge a_rst_i) begin
        //    if (a_rst_i) 
        //        rd_rst <= 2'b11;
        //    else 
        //        rd_rst <= {rd_rst[0],1'b0};            
        //end
        

        if (BYPASS_RESET_SYNC) begin
            assign wr_rst_int = a_wr_rst_i;
            assign rd_rst_int = a_rd_rst_i; 
            assign rst_busy   = 1'b0;
        end 
        else begin
            `IP_MODULE_NAME(efx_resetsync) #(
               .ACTIVE_LOW (0)
            ) efx_resetsync_wr_rst (
               .clk   (wr_clk_int),
               .reset (a_rst_i),
               .d_o   (wr_rst_int)
            );

            `IP_MODULE_NAME(efx_resetsync) #(
               .ACTIVE_LOW (0)
            ) efx_resetsync_rd_rst (
               .clk   (rd_clk_int),
               .reset (a_rst_i),
               .d_o   (rd_rst_int)
            );
            assign rst_busy   = wr_rst_int | rd_rst_int;
        end

    end
    else begin
        //(* async_reg = "true" *) reg [1:0] a_rst;
        //
        //always @ (posedge clk_i or posedge a_rst_i) begin
        //    if (a_rst_i) 
        //        a_rst <= 2'b11;
        //    else 
        //        a_rst <= {a_rst[0],1'b0};            
        //end
        wire   a_rst;

        `IP_MODULE_NAME(efx_resetsync) #(
           .ACTIVE_LOW (0)
        ) efx_resetsync_a_rst (
           .clk   (clk_i),
           .reset (a_rst_i),
           .d_o   (a_rst)
        );

        if (BYPASS_RESET_SYNC) begin
            assign wr_rst_int = a_rst_i;
            assign rd_rst_int = a_rst_i;
            assign rst_busy   = 1'b0;
        end
        else begin
            assign wr_rst_int = a_rst;
            assign rd_rst_int = a_rst;   
            assign rst_busy   = wr_rst_int | rd_rst_int;
        end
    end 
endgenerate

`IP_MODULE_NAME(efx_fifo_ram) # (
    .FAMILY        (FAMILY),
    .WR_DEPTH      (WR_DEPTH),
    .RD_DEPTH      (RD_DEPTH),
    .WDATA_WIDTH   (WDATA_WIDTH),
    .RDATA_WIDTH   (RDATA_WIDTH),
    .WADDR_WIDTH   (WADDR_WIDTH),
    .RADDR_WIDTH   (RADDR_WIDTH),
    .OUTPUT_REG    (OUTPUT_REG),
    .RAM_MUX_RATIO (RAM_MUX_RATIO),
    .ENDIANESS	    (ENDIANESS),
    .RAM_STYLE     (RAM_STYLE)
) xefx_fifo_ram (
    .wdata (wdata), 
    .waddr (waddr),
    .raddr (raddr), 
    .we    (wr_en_int), 
    .re    (rd_en_int),
    .wclk  (wr_clk_int),
    .rclk  (rd_clk_int),
    .rdata (rdata)
);

`IP_MODULE_NAME(efx_fifo_ctl) # (
    .SYNC_CLK           (SYNC_CLK),
    .SYNC_STAGE         (SYNC_STAGE),
    .MODE               (MODE),
    .WR_DEPTH           (WR_DEPTH),
    .WADDR_WIDTH        (WADDR_WIDTH),
    .RADDR_WIDTH        (RADDR_WIDTH),
    .ASYM_WIDTH_RATIO   (ASYM_WIDTH_RATIO),
    .RAM_MUX_RATIO      (RAM_MUX_RATIO),
    .PIPELINE_REG       (PIPELINE_REG),
    .ALMOST_FLAG        (ALMOST_FLAG),
    .PROGRAMMABLE_FULL  (PROGRAMMABLE_FULL),
    .PROG_FULL_ASSERT   (PROG_FULL_ASSERT),
    .PROG_FULL_NEGATE   (PROG_FULL_NEGATE),
    .PROGRAMMABLE_EMPTY (PROGRAMMABLE_EMPTY),
    .PROG_EMPTY_ASSERT  (PROG_EMPTY_ASSERT),
    .PROG_EMPTY_NEGATE  (PROG_EMPTY_NEGATE),
    .OUTPUT_REG         (OUTPUT_REG),
    .HANDSHAKE_FLAG     (HANDSHAKE_FLAG),
    .OVERFLOW_PROTECT   (OVERFLOW_PROTECT),
    .UNDERFLOW_PROTECT  (UNDERFLOW_PROTECT)
) xefx_fifo_ctl (
    .wr_rst          (wr_rst_int),
    .rd_rst          (rd_rst_int),
    .wclk            (wr_clk_int),
    .rclk            (rd_clk_int),
    .we              (wr_en_i),
    .re              (rd_en_i),
    .wr_full         (full_o),
    .wr_ack          (wr_ack_o),
    .rd_empty        (empty_o),
    .wr_almost_full  (almost_full_o),
    .rd_almost_empty (almost_empty_o),
    .wr_prog_full    (prog_full_o),
    .rd_prog_empty   (prog_empty_o),
    .wr_en_int       (wr_en_int),
    .rd_en_int       (rd_en_int),
    .waddr           (waddr),
    .raddr           (raddr),
    .wr_datacount    (wr_datacount_int),
    .rd_datacount    (rd_datacount_int),
    .rd_vld          (rd_valid_o),
    .wr_overflow     (overflow_o),
    .rd_underflow    (underflow_o)
);

function integer depth2width;
input [31:0] depth;
begin : fnDepth2Width
    if (depth > 1) begin
        depth = depth - 1;
        for (depth2width=0; depth>0; depth2width = depth2width + 1)
            depth = depth>>1;
        end
    else
    depth2width = 0;
end
endfunction 

function integer width2depth;
input [31:0] width;
begin : fnWidth2Depth
    width2depth = width**2;
end
endfunction

function integer rdwidthcompute;
input [31:0] asym_option;
input [31:0] wr_width;
begin : RdWidthCompute
    rdwidthcompute = (asym_option==0)? wr_width/16 :
                     (asym_option==1)? wr_width/8  :
                     (asym_option==2)? wr_width/4  :
                     (asym_option==3)? wr_width/2  :
                     (asym_option==4)? wr_width/1  :
                     (asym_option==5)? wr_width*2  :
                     (asym_option==6)? wr_width*4  :
                     (asym_option==7)? wr_width*8  :
                     (asym_option==8)? wr_width*16 : wr_width/1;
end
endfunction

function integer rddepthcompute;
input [31:0] wr_depth;
input [31:0] wr_width;
input [31:0] rd_width;
begin : RdDepthCompute
    rddepthcompute = (wr_depth * wr_width) / rd_width;
end
endfunction

endmodule


/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2021 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   simple_dual_port_ram_fifo.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      EFX FIFO
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
//
// *******************************

module `IP_MODULE_NAME(efx_fifo_ram) #(
    parameter FAMILY        = "TRION",
    parameter WR_DEPTH      = 512,
    parameter RD_DEPTH      = 512,
    parameter WDATA_WIDTH   = 8,
    parameter RDATA_WIDTH   = 8,
    parameter WADDR_WIDTH   = 9,
    parameter RADDR_WIDTH   = 9,
    parameter OUTPUT_REG    = 1,
    parameter RAM_MUX_RATIO = 4,
    parameter ENDIANESS 	 = 0, //0: Big endian (default)   1: Little endian 
    parameter RAM_STYLE     = "block_ram"
) (
    input  wire                     wclk,
    input  wire                     rclk,
    input  wire                     we,
    input  wire                     re,
    input  wire [(WDATA_WIDTH-1):0] wdata,
    input  wire [(WADDR_WIDTH-1):0] waddr,
    input  wire [(RADDR_WIDTH-1):0] raddr,
    output wire [(RDATA_WIDTH-1):0] rdata
);

localparam MEM_DEPTH         = (WR_DEPTH > RD_DEPTH) ? WR_DEPTH : RD_DEPTH;
localparam MEM_DATA_WIDTH    = (WDATA_WIDTH > RDATA_WIDTH) ? RDATA_WIDTH : WDATA_WIDTH;   
localparam LSB_WIDTH         = (WADDR_WIDTH > RADDR_WIDTH) ? (WADDR_WIDTH - RADDR_WIDTH) : (RADDR_WIDTH - WADDR_WIDTH);
localparam RDATA_WDATA_RATIO = (RDATA_WIDTH <= WDATA_WIDTH/32) ? "ONE_THIRTYTWO" :
                               (RDATA_WIDTH <= WDATA_WIDTH/16) ? "ONE_SIXTEENTH" :
                               (RDATA_WIDTH <= WDATA_WIDTH/8)  ? "ONE_EIGHTH"    :
                               (RDATA_WIDTH <= WDATA_WIDTH/4)  ? "ONE_FOURTH"    :
                               (RDATA_WIDTH <= WDATA_WIDTH/2)  ? "ONE_HALF"      :
                               (RDATA_WIDTH <= WDATA_WIDTH)    ? "ONE"           :
                               (RDATA_WIDTH <= WDATA_WIDTH*2)  ? "TWO_TIMES"     :
                               (RDATA_WIDTH <= WDATA_WIDTH*4)  ? "FOUR_TIMES"    :
                               (RDATA_WIDTH <= WDATA_WIDTH*4)  ? "EIGHT_TIMES"   :
                               (RDATA_WIDTH <= WDATA_WIDTH*4)  ? "SIXTEEN_TIMES" : "THIRTYTWO_TIMES";

(* syn_ramstyle = RAM_STYLE *) reg [MEM_DATA_WIDTH-1:0] ram[MEM_DEPTH-1:0];
reg [RDATA_WIDTH-1:0]    r_rdata_1P;
reg [RDATA_WIDTH-1:0]    r_rdata_2P;

wire                     re_int;

generate
    if (FAMILY == "TRION") begin
        if (RDATA_WDATA_RATIO == "ONE") begin
            always @ (posedge wclk) begin
                if (we)
                    ram[waddr] <= wdata;
            end
    
            always @ (posedge rclk) begin
                if (re_int) begin
                    r_rdata_1P <= ram[raddr];
                end
                r_rdata_2P <= r_rdata_1P;
            end
        end
        
        else if (RDATA_WDATA_RATIO == "ONE_THIRTYTWO" || RDATA_WDATA_RATIO == "ONE_SIXTEENTH" || RDATA_WDATA_RATIO == "ONE_EIGHTH" || RDATA_WDATA_RATIO == "ONE_FOURTH"  || RDATA_WDATA_RATIO == "ONE_HALF" ) begin
            if (ENDIANESS == 0) begin 
            	integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            	always @ (posedge wclk) begin
                	for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = RAM_MUX_RATIO-1-i;
                    	if (we) begin
                            ram[{waddr,lsbaddr}] <= wdata[((WDATA_WIDTH/RAM_MUX_RATIO)*i) +: WDATA_WIDTH/RAM_MUX_RATIO];
                        end
                    end
                end
                always @ (posedge rclk) begin 
                	if (re_int) begin
                		r_rdata_1P <= ram[raddr];
                    end
                		r_rdata_2P <= r_rdata_1P;
                end
            end
            else begin //endianess == 1
            	integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            	always @ (posedge wclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = i;
                    	if (we) begin
                            ram[{waddr,lsbaddr}] <= wdata[((WDATA_WIDTH/RAM_MUX_RATIO)*i) +: WDATA_WIDTH/RAM_MUX_RATIO];
                        end
                    end
                end
                always @ (posedge rclk) begin 
                	if (re_int) begin
                		r_rdata_1P <= ram[raddr];
                	end
                		r_rdata_2P <= r_rdata_1P;
                end
            end
        end
        
        else if (RDATA_WDATA_RATIO == "TWO_TIMES" || RDATA_WDATA_RATIO == "FOUR_TIMES"  || RDATA_WDATA_RATIO == "EIGHT_TIMES"  || RDATA_WDATA_RATIO == "SIXTEEN_TIMES"  ||RDATA_WDATA_RATIO == "THIRTYTWO_TIMES" ) begin
            //integer i;
        	//reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
        	if (ENDIANESS == 0) begin
        		always @ (posedge wclk) begin
        			if (we)
        				ram[waddr] <= wdata;
        		end
        		integer i;
        		reg  [LSB_WIDTH-1 :0 ]   lsbaddr; 
        		always @ (posedge rclk) begin
        			for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = RAM_MUX_RATIO-1-i;
                    	if (re_int) begin
                    		r_rdata_1P[((RDATA_WIDTH/RAM_MUX_RATIO)*i) +: RDATA_WIDTH/RAM_MUX_RATIO] <= ram[{raddr,lsbaddr}];
                    	end
                        	r_rdata_2P <= r_rdata_1P;
                    end
                end 
            end
            else begin //endianess == 1
            	always @ (posedge wclk) begin
        			if (we)
        				ram[waddr] <= wdata;
        		end
        		integer i;
        		reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
        		always @ (posedge rclk) begin
        			for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = i;
                    	if (re_int) begin
                    		r_rdata_1P[((RDATA_WIDTH/RAM_MUX_RATIO)*i) +: RDATA_WIDTH/RAM_MUX_RATIO] <= ram[{raddr,lsbaddr}];
                    	end
                        	r_rdata_2P <= r_rdata_1P;
                    end
                end
            end
        end
        if (OUTPUT_REG) begin
            assign re_int = re;
            assign rdata  = r_rdata_2P;            
        end
        else begin
            assign re_int = re;
            assign rdata  = r_rdata_1P;
        end
    end
    else begin
        if (RDATA_WDATA_RATIO == "ONE") begin
            always @ (posedge wclk) begin
                if (we)
                    ram[waddr] <= wdata;
            end
    
            always @ (posedge rclk) begin
                if (re_int) begin
                    r_rdata_1P <= ram[raddr];
                    r_rdata_2P <= r_rdata_1P;
                end
            end
        end 
        else if (RDATA_WDATA_RATIO == "ONE_THIRTYTWO" || RDATA_WDATA_RATIO == "ONE_SIXTEENTH" || RDATA_WDATA_RATIO == "ONE_EIGHTH" || RDATA_WDATA_RATIO == "ONE_FOURTH"  || RDATA_WDATA_RATIO == "ONE_HALF" ) begin
            //integer i;
            //reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            if (ENDIANESS == 0) begin
            	integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            	always @ (posedge wclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = RAM_MUX_RATIO-1-i;
                    	if (we) begin
                            	ram[{waddr,lsbaddr}] <= wdata[((WDATA_WIDTH/RAM_MUX_RATIO)*i) +: WDATA_WIDTH/RAM_MUX_RATIO];
                        end
                    end
                 end
               	always @ (posedge rclk) begin 
               		if (re_int) begin
               			r_rdata_1P <= ram[raddr];
               			r_rdata_2P <= r_rdata_1P;
               		end
               	end
            end
            
            else begin //endianess == 1
            	integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            	always @ (posedge wclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = i;
                    	if (we) begin
                            	ram[{waddr,lsbaddr}] <= wdata[((WDATA_WIDTH/RAM_MUX_RATIO)*i) +: WDATA_WIDTH/RAM_MUX_RATIO];
                        end
                    end
                 end
               	always @ (posedge rclk) begin 
               		if (re_int) begin
               			r_rdata_1P <= ram[raddr];
               			r_rdata_2P <= r_rdata_1P;
               		end
               	end
            end
        end
        else if (RDATA_WDATA_RATIO == "TWO_TIMES" || RDATA_WDATA_RATIO == "FOUR_TIMES"  || RDATA_WDATA_RATIO == "EIGHT_TIMES"  || RDATA_WDATA_RATIO == "SIXTEEN_TIMES"  || RDATA_WDATA_RATIO == "THIRTYTWO_TIMES" ) begin
        	//integer i;
            //reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
        	if (ENDIANESS == 0) begin
        		always @ (posedge wclk) begin
        			if (we)
        				ram[waddr] <= wdata;
        		end
        		integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;        
            	always @ (posedge rclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = RAM_MUX_RATIO-1-i;
                    	if (re_int) begin
                    		r_rdata_1P[((RDATA_WIDTH/RAM_MUX_RATIO)*i) +: RDATA_WIDTH/RAM_MUX_RATIO] <= ram[{raddr,lsbaddr}];
                    		r_rdata_2P                                                               <= r_rdata_1P;
                    	end
                    end
                end 
            end
            
            else begin //endianess ==1
        		always @ (posedge wclk) begin
        			if (we)
        				ram[waddr] <= wdata;
        		end
        		integer i;
        		reg  [LSB_WIDTH-1 :0 ]   lsbaddr;        
            	always @ (posedge rclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = i;
                    	if (re_int) begin
                    		r_rdata_1P[((RDATA_WIDTH/RAM_MUX_RATIO)*i) +: RDATA_WIDTH/RAM_MUX_RATIO] <= ram[{raddr,lsbaddr}];
                    		r_rdata_2P                                                               <= r_rdata_1P;
                    	end
                    end
                end 
            end
        end
        // NIC
        //if (MODE == "STANDARD") begin     
        //    if (OUTPUT_REG) begin
        //        reg re_r;
        //        always @ (posedge rclk) begin
        //            re_r <= re;
        //        end
        //        assign re_int = re | re_r;        
        //        assign rdata  = r_rdata_2P;            
        //    end
        //    else begin
        //        assign re_int = re;
        //        assign rdata  = r_rdata_1P;
        //    end
        //end
        //else begin
        //    assign re_int = re;
        //    assign rdata  = r_rdata_1P;
        //end    
        if (OUTPUT_REG) begin
            reg re_r;
            always @ (posedge rclk) begin
                re_r <= re;
            end
            assign re_int = re | re_r;        
            assign rdata  = r_rdata_2P;            
        end
        else begin
            assign re_int = re;
            assign rdata  = r_rdata_1P;
        end    
    end
endgenerate

endmodule

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2021 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.
//
////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2020 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   gray2bin.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      Gray to Binary Encoding Convertor
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
// 1.0 Initial rev
//
// *******************************

`resetall
`timescale 1ns/1ps

module `IP_MODULE_NAME(efx_fifo_gray2bin)
#(parameter WIDTH=5)
(// outputs
 output wire [WIDTH-1:0] bin_o,
 // input
 input [WIDTH-1:0] gray_i);

//---------------------------------------------------------------------
// Recursive Module
// Description: reduction xor
generate
   if (WIDTH > 1) begin
      wire [1:0] bin_1;
      assign bin_1 = {gray_i[WIDTH-1], gray_i[WIDTH-1]^gray_i[WIDTH-2]};
      if (WIDTH == 2) begin
	 assign bin_o = bin_1;
      end
      else begin
	 assign bin_o[WIDTH-1] = bin_1[1];
	 `IP_MODULE_NAME(efx_fifo_gray2bin) #(.WIDTH(WIDTH-1)) u_gray2bin (.bin_o(bin_o[WIDTH-2:0]), .gray_i({bin_1[0], gray_i[WIDTH-3:0]}));
      end
   end
   else /* if (WIDTH == 1) */
     assign bin_o = gray_i;
endgenerate
   
endmodule 

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2020 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.
//
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2020 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   pipe_reg.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      Parallel Pipelining Shift Register
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
// 1.0 Initial rev
//
// *******************************

module `IP_MODULE_NAME(efx_fifo_datasync) #(
    parameter STAGE = 32,
    parameter WIDTH = 4
) (
 input  wire             clk_i,
 input  wire [WIDTH-1:0] d_i,
 output wire [WIDTH-1:0] d_o
);

(* async_reg = "true" *) reg [WIDTH-1:0] pipe_reg [STAGE-1:0];
integer i;

always @(posedge clk_i) begin
  for (i=STAGE-1; i>0; i = i - 1) begin
    pipe_reg[i] <= pipe_reg[i-1];
  end
  pipe_reg[0] <= d_i;
end
assign d_o = pipe_reg[STAGE-1];
   

endmodule

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2020 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.
//
////////////////////////////////////////////////////////////////////////////////



// synopsys translate_off
`timescale 1 ns / 1 ps													
// synopsys translate_on

module `IP_MODULE_NAME(efx_resetsync) #(
    parameter ASYNC_STAGE = 2,
    parameter ACTIVE_LOW = 1
) (
    input  wire             clk,
    input  wire             reset,
    output wire             d_o
);


generate
   if (ACTIVE_LOW == 1) begin: active_low
      `IP_MODULE_NAME(efx_asyncreg) #(
         .WIDTH      (1),
         .ACTIVE_LOW (1),
         .RST_VALUE  (0)
      ) efx_resetsync_active_low (
         .clk     (clk),
         .reset_n (reset),
         .d_i     (1'b1),
         .d_o     (d_o)
      );
   end
   else begin: active_high
      `IP_MODULE_NAME(efx_asyncreg) #(
         .WIDTH      (1),
         .ACTIVE_LOW (0),
         .RST_VALUE  (1)
      ) efx_resetsync_active_high (
         .clk     (clk),
         .reset_n (reset),
         .d_i     (1'b0),
         .d_o     (d_o)
      );
   end
endgenerate

endmodule



// synopsys translate_off
`timescale 1 ns / 1 ps													
// synopsys translate_on

module `IP_MODULE_NAME(efx_asyncreg) #(
    parameter ASYNC_STAGE = 2,
    parameter WIDTH = 4,
    parameter ACTIVE_LOW = 1, // 0 - Active high reset, 1 - Active low reset
    parameter RST_VALUE = 0 
) (
    input  wire             clk,
    input  wire             reset_n,
    input  wire [WIDTH-1:0] d_i,
    output wire [WIDTH-1:0] d_o
);

(* async_reg = "true" *) reg [WIDTH-1:0] async_reg[ASYNC_STAGE-1:0];

assign d_o = async_reg[ASYNC_STAGE-1];

genvar i;
generate
   if (ACTIVE_LOW == 1) begin: active_low
      if (RST_VALUE == 0) begin: low_reset_0
         always @ (posedge clk or negedge reset_n) begin
             if(!reset_n) begin
                 async_reg[0]         <= {WIDTH{1'b0}};
             end
             else begin 
                 async_reg[0]         <= d_i;
             end
         end
             
         for (i=1; i<ASYNC_STAGE; i=i+1) begin
             always @ (posedge clk or negedge reset_n) begin
                 if(!reset_n) begin
                     async_reg[i]         <= {WIDTH{1'b0}};
                 end
                 else begin 
                     async_reg[i]         <= async_reg[i-1];
                 end
             end
         end
      end
      else begin: low_reset_1
         always @ (posedge clk or negedge reset_n) begin
             if(!reset_n) begin
                 async_reg[0]         <= {WIDTH{1'b1}};
             end
             else begin 
                 async_reg[0]         <= d_i;
             end
         end
             
         for (i=1; i<ASYNC_STAGE; i=i+1) begin
             always @ (posedge clk or negedge reset_n) begin
                 if(!reset_n) begin
                     async_reg[i]         <= {WIDTH{1'b1}};
                 end
                 else begin 
                     async_reg[i]         <= async_reg[i-1];
                 end
             end
         end
      end
   end
   else begin: active_high
      if (RST_VALUE == 0) begin: high_reset_0
         always @ (posedge clk or posedge reset_n) begin
             if(reset_n) begin
                 async_reg[0]         <= {WIDTH{1'b0}};
             end
             else begin 
                 async_reg[0]         <= d_i;
             end
         end
             
         for (i=1; i<ASYNC_STAGE; i=i+1) begin
             always @ (posedge clk or posedge reset_n) begin
                 if(reset_n) begin
                     async_reg[i]         <= {WIDTH{1'b0}};
                 end
                 else begin 
                     async_reg[i]         <= async_reg[i-1];
                 end
             end
         end
      end
      else begin: high_reset_1
         always @ (posedge clk or posedge reset_n) begin
             if(reset_n) begin
                 async_reg[0]         <= {WIDTH{1'b1}};
             end
             else begin 
                 async_reg[0]         <= d_i;
             end
         end
             
         for (i=1; i<ASYNC_STAGE; i=i+1) begin
             always @ (posedge clk or posedge reset_n) begin
                 if(reset_n) begin
                     async_reg[i]         <= {WIDTH{1'b1}};
                 end
                 else begin 
                     async_reg[i]         <= async_reg[i-1];
                 end
             end
         end
      end
   end
endgenerate

endmodule


/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2021 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   simple_dual_port_ram_fifo.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      EFX FIFO
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
//
// *******************************

module `IP_MODULE_NAME(efx_fifo_ctl) # (
    parameter SYNC_CLK           = 1,
    parameter SYNC_STAGE         = 2,
    parameter MODE               = "STANDARD",
    parameter WR_DEPTH           = 512,
    parameter WADDR_WIDTH        = 9,
    parameter RADDR_WIDTH        = 9,
    parameter ASYM_WIDTH_RATIO   = 4,
    parameter RAM_MUX_RATIO      = 1,
    parameter PIPELINE_REG       = 1,
    parameter ALMOST_FLAG        = 1,
    parameter PROGRAMMABLE_FULL  = "NONE",
    parameter PROG_FULL_ASSERT   = 0,
    parameter PROG_FULL_NEGATE   = 0,
    parameter PROGRAMMABLE_EMPTY = "NONE",
    parameter PROG_EMPTY_ASSERT  = 0,
    parameter PROG_EMPTY_NEGATE  = 0,
    parameter OUTPUT_REG         = 0,
    parameter HANDSHAKE_FLAG     = 1, 
    parameter OVERFLOW_PROTECT   = 0,
    parameter UNDERFLOW_PROTECT  = 0
)(
    input   wire                   wr_rst,
    input   wire                   rd_rst,
    input   wire                   wclk,
    input   wire                   rclk,
    input   wire                   we,
    input   wire                   re,
    output  wire                   wr_full,
    output  reg                    wr_ack,
    output  wire                   wr_almost_full,
    output  wire                   rd_empty,
    output  wire                   rd_almost_empty,
    output  wire                   wr_prog_full,
    output  wire                   rd_prog_empty,
    output  wire                   wr_en_int,
    output  wire                   rd_en_int,
    output  wire [WADDR_WIDTH-1:0] waddr,
    output  wire [RADDR_WIDTH-1:0] raddr,
    output  wire [WADDR_WIDTH:0]   wr_datacount,
    output  wire [RADDR_WIDTH:0]   rd_datacount,
    output  wire                   rd_vld,
    output  reg                    wr_overflow,
    output  reg                    rd_underflow
);

reg  [WADDR_WIDTH:0] waddr_cntr;
reg  [WADDR_WIDTH:0] waddr_cntr_r;
reg  [RADDR_WIDTH:0] raddr_cntr;
reg                  rd_valid;

wire [WADDR_WIDTH:0] waddr_int;
wire [RADDR_WIDTH:0] raddr_int;
wire                 rd_empty_int;
wire [WADDR_WIDTH:0] wr_datacount_int;
wire [RADDR_WIDTH:0] rd_datacount_int;

assign waddr     = waddr_cntr[WADDR_WIDTH-1:0];
// NIC
wire [RADDR_WIDTH:0] ram_raddr;
assign raddr     = (MODE == "FWFT") ? ram_raddr[RADDR_WIDTH-1:0] : raddr_cntr[RADDR_WIDTH-1:0];
//assign raddr     = raddr_cntr[RADDR_WIDTH-1:0];
//assign wr_en_int = we & ~wr_full;
assign wr_en_int = OVERFLOW_PROTECT ? we & ~wr_full : we;

assign wr_datacount  = wr_datacount_int;
assign rd_datacount  = rd_datacount_int;


generate
    if (MODE == "FWFT") begin    
        // NIC
        //assign rd_en_int     = (~rd_empty_int & rd_empty) | (re & ~rd_empty_int);
        //assign rd_empty      = rd_empty_fwft;

        assign rd_en_int     = 1'b1;
        //assign rd_empty      = rd_empty_int;
        
        //always @ (posedge rclk or posedge rd_rst) begin
        //    if (rd_rst) begin
        //        init_set <= 1'b1;
        //    end
        //    else if (~init_set & rd_empty) begin
        //        init_set <= 1'b1;            
        //    end
        //    else if (~rd_empty_int) begin
        //        init_set <= 1'b0;            
        //    end
        //    else if (rd_empty) begin
        //        init_set <= 1'b1;            
        //    end
        //end
        // NIC 
        //always @ (posedge rclk or posedge rd_rst) begin
        //    if (rd_rst) begin
        //        rd_empty_fwft <= 1'b1;
        //    end
        //    else if (rd_en_int) begin
        //        rd_empty_fwft <= 1'b0;            
        //    end
        //    else if (re) begin
        //        rd_empty_fwft <= 1'b1;            
        //    end
        //end          
        
        //if (FAMILY == "TRION") begin
        if (OUTPUT_REG) begin
            always @ (posedge rclk or posedge rd_rst) begin
                if (rd_rst) begin
                    rd_valid <= 1'b0;
                end
                else begin
                    rd_valid <= ~rd_empty;
                end
            end
            assign rd_vld = rd_valid;                
        end    
        else begin
            assign rd_vld = ~rd_empty;                
        end
        
        assign rd_empty = rd_empty_int;
    end
    else begin
        assign rd_en_int     = UNDERFLOW_PROTECT ? re & ~rd_empty_int : re;
        assign rd_empty      = rd_empty_int;
        
        if (OUTPUT_REG) begin
            reg rd_valid_r;
            always @ (posedge rclk or posedge rd_rst) begin
                if (rd_rst) begin
                    rd_valid_r <= 'h0;
                    rd_valid   <= 'h0;
                end
                else begin
                    {rd_valid,rd_valid_r} <= {rd_valid_r,rd_en_int};
                end
            end
            assign rd_vld = rd_valid;            
        end
        else begin
            always @ (posedge rclk or posedge rd_rst) begin
                if (rd_rst) begin
                    rd_valid  <= 'h0;
                end
                else begin
                    rd_valid <= rd_en_int;
                end
            end
            assign rd_vld = rd_valid;
        end
    end
    
    if (ALMOST_FLAG) begin
        assign wr_almost_full   = wr_datacount_int >= WR_DEPTH-1;
        assign rd_almost_empty  = rd_datacount_int <= 'd1;
    end
    else begin
        assign wr_almost_full   = 1'b0;
        assign rd_almost_empty  = 1'b0;        
    end
    
    if (PROGRAMMABLE_FULL == "STATIC_SINGLE") begin
        reg    wr_prog_full_int;
        assign wr_prog_full  = wr_datacount >= PROG_FULL_ASSERT;
        
        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                wr_prog_full_int  <= 1'b0;
            end
            else begin
                wr_prog_full_int  <= wr_prog_full;
            end
        end  
    end
    else if (PROGRAMMABLE_FULL == "STATIC_DUAL") begin
        reg    wr_prog_full_int;
        assign wr_prog_full  = wr_prog_full_int ? wr_datacount >= PROG_FULL_NEGATE : wr_datacount >= PROG_FULL_ASSERT;   

        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                wr_prog_full_int  <= 1'b0;
            end
            else begin
                wr_prog_full_int  <= wr_prog_full;
            end
        end              
    end
    else begin
        assign wr_prog_full  = 1'b0; 
    end
        
    if (PROGRAMMABLE_EMPTY == "STATIC_SINGLE") begin
        reg    rd_prog_empty_int;
        assign rd_prog_empty  = rd_datacount <= PROG_EMPTY_ASSERT;
            
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                rd_prog_empty_int <= 1'b1;
            end
            else begin
                rd_prog_empty_int <= rd_prog_empty;
            end
        end
    end
    else if (PROGRAMMABLE_EMPTY == "STATIC_DUAL") begin
        reg    rd_prog_empty_int;
        assign rd_prog_empty = rd_prog_empty_int ? (rd_datacount <= PROG_EMPTY_NEGATE) : (rd_datacount <= PROG_EMPTY_ASSERT);
            
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                rd_prog_empty_int <= 1'b1;
            end
            else begin
                rd_prog_empty_int <= rd_prog_empty;
            end
        end  
    end
    else begin
        assign rd_prog_empty  = 1'b0; 
    end
    
    if (HANDSHAKE_FLAG) begin
    
        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                wr_ack <= 1'b0;
            end
            else begin
                // NIC
                //wr_ack <= wr_en_int & ~wr_overflow;
                wr_ack <= OVERFLOW_PROTECT ? wr_en_int & ~wr_overflow : wr_en_int & ~wr_full;
            end
        end

        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                wr_overflow <= 1'b0;
            end
            else if (we && wr_full) begin
                wr_overflow <= 1'b1;
            end
            else begin
                wr_overflow <= 1'b0;            
            end
        end
        
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                rd_underflow <= 1'b0;
            end
            else if (re && rd_empty) begin
                rd_underflow <= 1'b1;
            end
            else begin
                rd_underflow <= 1'b0;            
            end
        end
    end
    
    localparam RATIO_WIDTH = (RADDR_WIDTH >= WADDR_WIDTH)? RADDR_WIDTH - WADDR_WIDTH : WADDR_WIDTH - RADDR_WIDTH;
    
    if (ASYM_WIDTH_RATIO < 4) begin
        assign wr_full          = (waddr_cntr[WADDR_WIDTH]^raddr_int[RADDR_WIDTH]) & (waddr_cntr[WADDR_WIDTH-1:0] == raddr_int[RADDR_WIDTH-1:RATIO_WIDTH]);
        assign rd_empty_int     = waddr_int[WADDR_WIDTH:0] == raddr_cntr[RADDR_WIDTH:RATIO_WIDTH];
        assign wr_datacount_int = waddr_cntr - (raddr_int/RAM_MUX_RATIO);
        assign rd_datacount_int = (waddr_int*RAM_MUX_RATIO)-raddr_cntr;
    end
    // NIC
    else if (ASYM_WIDTH_RATIO == 4) begin
        assign wr_full          = (waddr_cntr[WADDR_WIDTH]^raddr_int[RADDR_WIDTH]) & (waddr_cntr[WADDR_WIDTH-1:0] == raddr_int[RADDR_WIDTH-1:0]);
        assign rd_empty_int     = waddr_int[WADDR_WIDTH:0] == raddr_cntr[RADDR_WIDTH:0];
        assign wr_datacount_int = waddr_cntr - raddr_int;
        assign rd_datacount_int = waddr_int - raddr_cntr;
    end
    else begin
        assign wr_full          = (waddr_cntr[WADDR_WIDTH]^raddr_int[RADDR_WIDTH]) & (waddr_cntr[WADDR_WIDTH-1:RATIO_WIDTH] == raddr_int[RADDR_WIDTH-1:0]);
        // NIC
        //assign rd_empty_int     = (waddr_int- raddr_cntr*RAM_MUX_RATIO) < RAM_MUX_RATIO;
        assign rd_empty_int     = waddr_int[WADDR_WIDTH:RATIO_WIDTH] == raddr_cntr[RADDR_WIDTH:0];
        assign wr_datacount_int = waddr_cntr - (raddr_int*RAM_MUX_RATIO);
        assign rd_datacount_int = (waddr_int/RAM_MUX_RATIO)-raddr_cntr;
    end
endgenerate

always @ (posedge wclk or posedge wr_rst) begin
    if (wr_rst) begin
        waddr_cntr   <= 'h0;
    end
    else if (wr_en_int) begin
        waddr_cntr   <= waddr_cntr + 1'b1;
    end
end

always @ (posedge wclk or posedge wr_rst) begin
    if (wr_rst) begin
        waddr_cntr_r  <= 'h0;
    end
    else begin
        waddr_cntr_r  <= waddr_cntr;
    end
end

always @ (posedge rclk or posedge rd_rst) begin
    if (rd_rst) begin
        raddr_cntr   <= 'h0;
    end
    // NIC
    //else if (rd_en_int) begin
    else begin
        //raddr_cntr   <= raddr_cntr + 1'b1;
        //raddr_cntr   <= raddr_cntr + (re & ~rd_empty_int);
        raddr_cntr   <= ram_raddr;
    end
end
// NIC
assign ram_raddr = raddr_cntr + (UNDERFLOW_PROTECT ? re & ~rd_empty_int : re);


generate
    if (SYNC_CLK) begin : sync_clk
       if (MODE == "FWFT") begin
          assign waddr_int = waddr_cntr_r;
          assign raddr_int        = raddr_cntr;
       end
       else begin
          assign waddr_int        = waddr_cntr;
          assign raddr_int        = raddr_cntr;
       end
    end
    else begin : async_clk
        reg  [RADDR_WIDTH:0] raddr_cntr_gry_r;
        reg  [WADDR_WIDTH:0] waddr_cntr_gry_r;
        
        wire [RADDR_WIDTH:0] raddr_cntr_gry;
        wire [RADDR_WIDTH:0] raddr_cntr_gry_sync;
        wire [RADDR_WIDTH:0] raddr_cntr_sync_g2b;
        wire [WADDR_WIDTH:0] waddr_cntr_gry;
        wire [WADDR_WIDTH:0] waddr_cntr_gry_sync;
        wire [WADDR_WIDTH:0] waddr_cntr_sync_g2b;

        if (PIPELINE_REG) begin
            reg  [RADDR_WIDTH:0] raddr_cntr_sync_g2b_r;    
            reg  [WADDR_WIDTH:0] waddr_cntr_sync_g2b_r;        
        
            assign waddr_int        = waddr_cntr_sync_g2b_r;
            assign raddr_int        = raddr_cntr_sync_g2b_r;
            
            always @ (posedge wclk or posedge wr_rst) begin
                if (wr_rst) begin
                    raddr_cntr_sync_g2b_r <= 'h0;
                end
                else begin
                    raddr_cntr_sync_g2b_r <= raddr_cntr_sync_g2b;
                end
            end
            
            always @ (posedge rclk or posedge rd_rst) begin
                if (rd_rst) begin
                    waddr_cntr_sync_g2b_r <= 'h0;
                end
                else begin
                    waddr_cntr_sync_g2b_r <= waddr_cntr_sync_g2b;
                end
            end
        end
        else begin
            assign waddr_int        = waddr_cntr_sync_g2b;
            assign raddr_int        = raddr_cntr_sync_g2b;        
        end
      
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                raddr_cntr_gry_r <= 'h0;
            end
            else begin
                raddr_cntr_gry_r <= raddr_cntr_gry;
            end
        end
        `IP_MODULE_NAME(efx_fifo_bin2gray) # (.WIDTH(RADDR_WIDTH+1)                                           ) xrd2wr_bin2gray    (.bin_i(raddr_cntr), .gray_o(raddr_cntr_gry));
        `IP_MODULE_NAME(efx_asyncreg)      # (.ASYNC_STAGE(SYNC_STAGE), .WIDTH (RADDR_WIDTH+1), .ACTIVE_LOW(0)) xrd2wr_addr_sync   (.clk(wclk), .reset_n(wr_rst), .d_i(raddr_cntr_gry_r), .d_o(raddr_cntr_gry_sync));
        `IP_MODULE_NAME(efx_fifo_gray2bin) # (.WIDTH(RADDR_WIDTH+1)                                           ) xrd2wr_gray2bin    (.gray_i(raddr_cntr_gry_sync), .bin_o(raddr_cntr_sync_g2b));
        
        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                waddr_cntr_gry_r <= 'h0;
            end
            else begin
                waddr_cntr_gry_r <= waddr_cntr_gry;
            end
        end        
        `IP_MODULE_NAME(efx_fifo_bin2gray) # (.WIDTH(WADDR_WIDTH+1)                                           ) wr2rd_bin2gray  (.bin_i(waddr_cntr), .gray_o(waddr_cntr_gry));
        `IP_MODULE_NAME(efx_asyncreg)      # (.ASYNC_STAGE(SYNC_STAGE), .WIDTH (WADDR_WIDTH+1), .ACTIVE_LOW(0)) wr2rd_addr_sync (.clk(rclk), .reset_n(rd_rst), .d_i(waddr_cntr_gry_r), .d_o(waddr_cntr_gry_sync));
        `IP_MODULE_NAME(efx_fifo_gray2bin) # (.WIDTH(WADDR_WIDTH+1)                                           ) wr2rd_gray2bin  (.gray_i(waddr_cntr_gry_sync), .bin_o(waddr_cntr_sync_g2b));        

    end
endgenerate
endmodule


////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2020 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   bin2gray.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      Binary to Gray Encoding Convertor
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
// 1.0 Initial rev
//
// *******************************

`resetall
`timescale 1ns/1ps

module `IP_MODULE_NAME(efx_fifo_bin2gray)
#(parameter WIDTH=5)
(// outputs
 output wire [WIDTH-1:0] gray_o,
 // input
 input [WIDTH-1:0] bin_i
 );

//---------------------------------------------------------------------
// Function :   bit_xor
// Description: reduction xor
function bit_xor (
  input [31:0] nex_bit,
  input [31:0] curr_bit,
  input [WIDTH-1:0] xor_in);
  begin : fn_bit_xor
    bit_xor = xor_in[nex_bit] ^ xor_in[curr_bit];
  end
endfunction

// Convert Binary to Gray, bit by bit
generate 
begin
  genvar bit_idx;
  for(bit_idx=0; bit_idx<WIDTH-1; bit_idx=bit_idx+1) begin : gBinBits
    assign gray_o[bit_idx] = bit_xor(bit_idx+1, bit_idx, bin_i);
  end
  assign   gray_o[WIDTH-1] = bin_i[WIDTH-1];
end
endgenerate

endmodule 

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2020 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.
//
////////////////////////////////////////////////////////////////////////////////


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
kZkO9ED0BNlfLxITGkJcfzbQQB7AGhNdcIBwR+7REcq1ePoIFDhdPmtBZdzUby+Q
d3+yxYcpI4DQni96AExY4eS1p63h0kXmLGGjv5KA/lsZny3JD8Jf35hDLj0MFkyO
OSzN7k/6wXMrEL+ckLmQNUfEMG0AStV/+gqUMo7buWW4H2ttZhNRYVW5sW0nseWn
nkxn8W17Qf4nV198B/mGlnMcG09JJeIsA8JS6qEUvcJFCbg8w7TrXOxq9zQnTEGh
+CMvPX2ioHqGZSl/BRkYEjNhvWlpSdufTKIbehOwjtQ+d7bX7pUh7TuhpORnQlRT
v3VFSK/FMXQKU51aeEd1qQ==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 1152 )
`pragma protect data_block
RxlDv6ef8f4MUj+znQc2x5RyEKWb/HQ3VvKSATw0fWl0tUGyoXi6IFLPlSIT6Q0C
b3aSSxznqFbhIHT2XM6YOQtPmXr/XWuF2H/eJQn1ixrTsiZCND6wZ22pqC6ZqMQE
NAlG95ScCk+EtXxBBOoTGzvKwe6j8QogS0iiMQaW1GH/KASvDVTbvSCRcZOAU3VK
FvASbATWeZZVqf86ULVl/lUjoQeKQVp5P6eTuQ6cvxCFRc4wgeGliT2jTmS01c/K
S1AN/rnmhU5vYQng6eGdCggc8qzrxdg+GLcS+i4osOEPAdgwC1iJj3WCNWjDWmIA
1lu6ySZ5exoUGO4Gq50unp3NHp9I4MM1/mo6dqEsTftN36HGfncl+c/wqOxNCo5w
4FSNi5BvArUF+pubPbBG9ZWArJoWLCkdz5kHmaaOFCDFsqoCXe1HvT+Rym9/Pfem
/puHuFGtHSF59QnIcT3jUDCEnAfd3Nwy9ARavIdc8Cq4VRiKalSZz3XE8QMllp5E
I8Ejrtw6ocCojPH/cunMpRYfg4uDVKC2gfkbDA/3sa4u10egXq0R4EImObue0b50
ddC5LZmaWa2uptZQY60I7MfdyrfZRIB3RfrhMMr7j9WTp6029YBsgwLGtKEDNSqK
8531ZKUyK+odMGDswrsLXGZYEOsvtLSvxJu1uCPMDCSloagD/HnsdsN+Qcd+9csk
NUaAkJRhZIhlGj3EavHOGuXJ4Mr/IwWFRGJGpSlLks+gI6TR9N89+fRXuDSEpGiz
Lwaqu9Ru6h0e92UM0ZUw5y/oE/XHVescxaxUUUvK02mE1wZG04gsy8Zo9Dzd4vKr
bQD1xcG8MEO/vrUlOH2L+8FbRA9t5kaSKoLUqEZfvdNDoUKawTu+DscsHAomjjo5
qJf/Jrlzq5HyR4FE4vThgCOy9v2DCLohJU695tb6J1FyvL6wec1Kqm0jbxUA3tob
G8tPKEi6E6qwdduIf1XvM5IdlYh206QUA3VXmJCNuEuUkrPJt+Jayc8t94qc0H6B
8HHzLxIJALuJOwEXyV2ENjS3+6Cqr1G4cr30C6YgMq6HGuJhYWI7Ej6dlNVja3oL
U5MKFm9LluFBjpLOTDKOKhKqAUPRmB2giXgFmXTNpOlW9FOgxCdDbUPU2am6Wcts
ib4URRzDnWykv+gyVKJGuq2fFGVVXTh54FsubGVYsSOtJeBnpL7q38PBCJjh8Sf+
VWN4dOszM989q1h4Rpx9E8H8yX+k3sLnWlgSyXWIzl5I4+fq05+wrdHH7q5gKPlw
cKjkzFIHfNAKud/VRhdBQFmVPU+AjWNyrq6RdY7q6E5sUjkNDEUYsX/cQOdYQruj
DBh3glVO9kIgUDuYkpj4yDnkXhFCaESL3y7rdQq9dJAb0+ZSM1r9rZzo40EXbpry
y/nAkQ26EydptXpXef6tcayL23uZdV2rBQcE8vJ4yPCygJVNZQ96HSg/QBmIIN0f
kTe9mt77X5sctClrcTJkM3zPzZ5ZZYb8gJkUvQo3w3k9zd0W7WD0Hgb8OQjZ33y5
`pragma protect end_protected

//pragma protect end

`undef IP_UUID
`undef IP_NAME_CONCAT
`undef IP_MODULE_NAME
